[{"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/index.js":"1","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/App.js":"2","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/reportWebVitals.js":"3","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/Menu/Menu.js":"4","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/SearchPanel/SearchPanel.js":"5","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/NoteBoard/NoteBoard.js":"6","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/NoteItem/NoteItem.js":"7","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/HorizontalMenu/HorizontalMenu.js":"8","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/NewNoteModal/NewNoteModal.js":"9","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/ProfileSettings/ProfileSettings.js":"10"},{"size":500,"mtime":1611502036323,"results":"11","hashOfConfig":"12"},{"size":5865,"mtime":1612274027638,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611502036350,"results":"14","hashOfConfig":"12"},{"size":1889,"mtime":1612200913873,"results":"15","hashOfConfig":"12"},{"size":632,"mtime":1611787614012,"results":"16","hashOfConfig":"12"},{"size":822,"mtime":1612191405499,"results":"17","hashOfConfig":"12"},{"size":1322,"mtime":1612019028322,"results":"18","hashOfConfig":"12"},{"size":2481,"mtime":1612195660265,"results":"19","hashOfConfig":"12"},{"size":3997,"mtime":1611971545339,"results":"20","hashOfConfig":"12"},{"size":1272,"mtime":1612210994992,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13m148i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/index.js",[],["46","47"],"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/App.js",[],"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/reportWebVitals.js",[],"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/Menu/Menu.js",["48","49","50","51","52","53","54"],"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/SearchPanel/SearchPanel.js",[],"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/NoteBoard/NoteBoard.js",["55","56"],"import React, { Component } from \"react\";\nimport NoteItem from \"../NoteItem/NoteItem\";\n\nimport \"./NoteBoard.css\";\n\nexport default class NoteBoard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { onDelete, todos, onCompleted, isCompleted } = this.props;\n\n    return (\n      <>\n        <div className=\"noteBoard-container\">\n          {todos.map(todo => {\n            if (todo.id) {\n              return (\n                <NoteItem\n                  todo={todo}\n                  key={todo.id}\n                  onDelete={() => onDelete(todo.id)}\n                  onCompleted={() => onCompleted(todo.id)}\n                  id={todo.id}\n                  isCompleted={isCompleted}\n                />\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n  }\n}\n","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/NoteItem/NoteItem.js",["57"],"import React, { Component } from \"react\";\n\nimport \"./NoteItem.css\";\nimport pin from \"./NoteItemIcons/pin.svg\";\n\nexport default class NoteItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCompleted: false\n    };\n  }\n\n  onCompleted() {\n    this.setState(({ isCompleted }) => {\n      return {\n        isCompleted: !isCompleted\n      };\n    });\n  }\n\n  render() {\n    const { todo, onDelete /* , onCompleted */ } = this.props;\n    let classNames = \"done_false\";\n    if (this.state.isCompleted) {\n      classNames = \"done_true\";\n    }\n\n    return (\n      <>\n        <div className=\"note-item\">\n          <div className=\"pin\">\n            <img src={pin} />\n          </div>\n          <div className=\"functions\">\n            <div className=\"functions1\">\n              <div className=\"delete\" onClick={onDelete} />\n              <div className={classNames} onClick={() => this.onCompleted()} />\n              <div className=\"change\" />\n            </div>\n            <div className=\"functions2\">\n              <div className=\"settings\" />\n            </div>\n          </div>\n          <div className=\"note-title\">{todo.title}</div>\n          <div className=\"note-text-container\">\n            <p className=\"note-text\">{todo.text}</p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/HorizontalMenu/HorizontalMenu.js",["58","59","60","61"],"/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/NewNoteModal/NewNoteModal.js",["62","63"],"import React, { Component } from \"react\";\n\nimport \"./NewNoteModal.css\";\n\nexport default class NewNoteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      text: \"\",\n      isActive: this.props.isOpened\n    };\n    this.onValueChangeTitle = this.onValueChangeTitle.bind(this);\n    this.onValueChangeText = this.onValueChangeText.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onValueChangeTitle(e) {\n    // event нужен для того, что бы получать именно value из input\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onValueChangeText(e) {\n    // event нужен для того, что бы получать именно value из input\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    //  Во время события отправки формы, будет вызываться функция создания нового поста, куда передаем данные из стейта\n    this.props.addItem(this.state.title, this.state.text);\n    /* Получается:\n    1) Мы отслеживаем события изменения внутри формы\n    2) Отслежимаем когда пользователь отправит нашу форму\n    3) при отправке срабатывает onSubmit функция и она вызывает метод addItem, который принимает в себя необходимые данные из стейта */\n    this.setState({\n      title: \"\",\n      text: \"\"\n    });\n  }\n\n  render() {\n    const { title, text } = this.state;\n    const { closeModal, onEnterCloseModal } = this.props;\n    const {} = this.state;\n    const {} = this.state;\n    if (this.state.isActive) {\n      return (\n        <>\n          <div className=\"new-note-container\">\n            <div className=\"new-note-modal\">\n              <div className=\"modal-title\">\n                <p>New note</p>\n                <div className=\"delete-btn\" onClick={() => closeModal()}>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FF4D4D\" />\n                    <path\n                      d=\"M5.17163 5.17163L10.8285 10.8285\"\n                      stroke=\"white\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                    />\n                    <path\n                      d=\"M10.8285 5.17163L5.17164 10.8285\"\n                      stroke=\"white\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                    />\n                  </svg>\n                </div>\n              </div>\n              <form onSubmit={this.onSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"title\"\n                  className=\"new-note-title\"\n                  /* Отслеживаем изменения в инпуте */\n                  onChange={this.onValueChangeTitle}\n                  value={title}\n                />\n                <textarea\n                  type=\"textarea\"\n                  placeholder=\"note text\"\n                  rows=\"10\"\n                  cols=\"12\"\n                  onChange={this.onValueChangeText}\n                  value={text}\n                ></textarea>\n                <button\n                  className=\"btn-add\"\n                  type=\"submit\"\n                  onClick={onEnterCloseModal}\n                >\n                  add\n                </button>\n              </form>\n            </div>\n          </div>\n        </>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n","/Users/mathiasweiss/Desktop/desktop/it/проекты/web/2021/sb-notes/src/ProfileSettings/ProfileSettings.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":11,"column":3,"nodeType":"71","messageId":"72","endLine":13,"endColumn":4},{"ruleId":"73","severity":1,"message":"74","line":22,"column":13,"nodeType":"75","endLine":22,"endColumn":55},{"ruleId":"73","severity":1,"message":"74","line":28,"column":17,"nodeType":"75","endLine":28,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":34,"column":17,"nodeType":"75","endLine":34,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":40,"column":17,"nodeType":"75","endLine":40,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":46,"column":17,"nodeType":"75","endLine":46,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":53,"column":15,"nodeType":"75","endLine":53,"endColumn":33},{"ruleId":"69","severity":1,"message":"70","line":7,"column":3,"nodeType":"71","messageId":"72","endLine":9,"endColumn":4},{"ruleId":"76","severity":1,"message":"77","line":17,"column":27,"nodeType":"78","messageId":"79","endLine":17,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":33,"column":13,"nodeType":"75","endLine":33,"endColumn":30},{"ruleId":"80","severity":1,"message":"81","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":23},{"ruleId":"80","severity":1,"message":"84","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":45,"column":15,"nodeType":"75","endLine":45,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":49,"column":15,"nodeType":"75","endLine":49,"endColumn":60},{"ruleId":"87","severity":1,"message":"88","line":49,"column":11,"nodeType":"89","messageId":"90","endLine":49,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":50,"column":11,"nodeType":"89","messageId":"90","endLine":50,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":20,"column":13,"nodeType":"75","endLine":20,"endColumn":50},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'recentlyDeleted' is defined but never used.","Identifier","unusedVar","'sort' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]